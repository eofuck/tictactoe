{"ast":null,"code":"import _slicedToArray from\"/home/demiurge/Desktop/tictactoe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./style.css';import Box from'../Box';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var board=[[],[],[]];function Game(){var _useState=useState('X'),_useState2=_slicedToArray(_useState,2),turn=_useState2[0],setTurn=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),winningText=_useState4[0],setWinningText=_useState4[1];function changeTurn(row,col){board[row][col]=turn;setTurn(function(turn){return turn==='X'?'O':'X';});var winner=checkForWin();if(!winner){}else{setWinningText(winner+\" won!\");}}function checkForWin(){// row test\nfor(var i=0;i<board.length;i++){var row=board[i];if(row[0]===row[1]&&row[1]===row[2]&&row[0]){return row[0];}}// column test\nfor(var _i=0;_i<board.length;_i++){var el1=board[0][_i];var el2=board[1][_i];var el3=board[2][_i];if(el1===el2&&el2==el3&&el1){return el1;}}// diagonal test\nvar d1=board[0][0];var d2=board[1][1];var d3=board[2][2];if(d1===d2&&d2===d3&&d1){return d1;}var p1=board[0][2];var p2=board[1][1];var p3=board[2][0];if(p1===p2&&p2===p3&&p1){return p1;}return false;}return/*#__PURE__*/_jsxs(\"div\",{id:\"game\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"winning-text\",children:winningText}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(Box,{row:0,col:0,currentState:turn,changeTurn:changeTurn}),/*#__PURE__*/_jsx(Box,{row:0,col:1,currentState:turn,changeTurn:changeTurn}),/*#__PURE__*/_jsx(Box,{row:0,col:2,currentState:turn,changeTurn:changeTurn})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(Box,{row:1,col:0,currentState:turn,changeTurn:changeTurn}),/*#__PURE__*/_jsx(Box,{row:1,col:1,currentState:turn,changeTurn:changeTurn}),/*#__PURE__*/_jsx(Box,{row:1,col:2,currentState:turn,changeTurn:changeTurn})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(Box,{row:2,col:0,currentState:turn,changeTurn:changeTurn}),/*#__PURE__*/_jsx(Box,{row:2,col:1,currentState:turn,changeTurn:changeTurn}),/*#__PURE__*/_jsx(Box,{row:2,col:2,currentState:turn,changeTurn:changeTurn})]})]});}export default Game;","map":{"version":3,"sources":["/home/demiurge/Desktop/tictactoe/src/components/Game/index.js"],"names":["React","useState","Box","board","Game","turn","setTurn","winningText","setWinningText","changeTurn","row","col","winner","checkForWin","i","length","el1","el2","el3","d1","d2","d3","p1","p2","p3"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './style.css';\nimport Box from '../Box';\n\nconst board = [[], [], []];\n\nfunction Game() {\n  const [turn, setTurn] = useState('X');\n  const [winningText, setWinningText] = useState('');\n\n  function changeTurn(row, col) {\n    board[row][col] = turn;\n\n    setTurn((turn) => (turn === 'X' ? 'O' : 'X'));\n\n    const winner = checkForWin();\n\n    if (!winner) {\n    } else {\n      setWinningText(winner + ` won!`);\n    }\n  }\n\n  function checkForWin() {\n    // row test\n    for (let i = 0; i < board.length; i++) {\n      const row = board[i];\n      if (row[0] === row[1] && row[1] === row[2] && row[0]) {\n        return row[0];\n      }\n    }\n\n    // column test\n    for (let i = 0; i < board.length; i++) {\n      const el1 = board[0][i];\n      const el2 = board[1][i];\n      const el3 = board[2][i];\n\n      if (el1 === el2 && el2 == el3 && el1) {\n        return el1;\n      }\n    }\n\n    // diagonal test\n\n    const d1 = board[0][0];\n    const d2 = board[1][1];\n    const d3 = board[2][2];\n\n    if (d1 === d2 && d2 === d3 && d1) {\n      return d1;\n    }\n\n    const p1 = board[0][2];\n    const p2 = board[1][1];\n    const p3 = board[2][0];\n\n    if (p1 === p2 && p2 === p3 && p1) {\n      return p1;\n    }\n    return false;\n  }\n\n  return (\n    <div id='game'>\n      <div id='winning-text'>{winningText}</div>\n      <div className='row'>\n        <Box row={0} col={0} currentState={turn} changeTurn={changeTurn} />\n        <Box row={0} col={1} currentState={turn} changeTurn={changeTurn} />\n        <Box row={0} col={2} currentState={turn} changeTurn={changeTurn} />\n      </div>\n\n      <div className='row'>\n        <Box row={1} col={0} currentState={turn} changeTurn={changeTurn} />\n        <Box row={1} col={1} currentState={turn} changeTurn={changeTurn} />\n        <Box row={1} col={2} currentState={turn} changeTurn={changeTurn} />\n      </div>\n\n      <div className='row'>\n        <Box row={2} col={0} currentState={turn} changeTurn={changeTurn} />\n        <Box row={2} col={1} currentState={turn} changeTurn={changeTurn} />\n        <Box row={2} col={2} currentState={turn} changeTurn={changeTurn} />\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}
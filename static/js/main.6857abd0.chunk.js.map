{"version":3,"sources":["components/Box/index.js","components/Game/index.js","App.js","index.js"],"names":["Box","props","useState","text","setText","className","onClick","currentState","changeTurn","row","col","board","Game","turn","setTurn","winningText","setWinningText","winner","i","length","el1","el2","el3","d1","d2","d3","p1","p2","p3","checkForWin","id","App","ReactDOM","render","document","getElementById"],"mappings":"yOAoBeA,MAjBf,SAAaC,GACX,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KASA,OACE,qBAAKC,UAAU,MAAMC,QARvB,WACe,KAATH,IACFC,EAAQH,EAAMM,cACdN,EAAMO,WAAWP,EAAMQ,IAAKR,EAAMS,OAKpC,SACGP,KCXDQ,EAAQ,CAAC,GAAI,GAAI,IAmFRC,MAjFf,WACE,MAAwBV,mBAAS,KAAjC,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAAsCZ,mBAAS,IAA/C,mBAAOa,EAAP,KAAoBC,EAApB,KAEA,SAASR,EAAWC,EAAKC,GACvBC,EAAMF,GAAKC,GAAOG,EAElBC,GAAQ,SAACD,GAAD,MAAoB,MAATA,EAAe,IAAM,OAExC,IAAMI,EAQR,WAEE,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAAK,CACrC,IAAMT,EAAME,EAAMO,GAClB,GAAIT,EAAI,KAAOA,EAAI,IAAMA,EAAI,KAAOA,EAAI,IAAMA,EAAI,GAChD,OAAOA,EAAI,GAKf,IAAK,IAAIS,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAAK,CACrC,IAAME,EAAMT,EAAM,GAAGO,GACfG,EAAMV,EAAM,GAAGO,GACfI,EAAMX,EAAM,GAAGO,GAErB,GAAIE,IAAQC,GAAOA,GAAOC,GAAOF,EAC/B,OAAOA,EAMX,IAAMG,EAAKZ,EAAM,GAAG,GACda,EAAKb,EAAM,GAAG,GACdc,EAAKd,EAAM,GAAG,GAEpB,GAAIY,IAAOC,GAAMA,IAAOC,GAAMF,EAC5B,OAAOA,EAGT,IAAMG,EAAKf,EAAM,GAAG,GACdgB,EAAKhB,EAAM,GAAG,GACdiB,EAAKjB,EAAM,GAAG,GAEpB,GAAIe,IAAOC,GAAMA,IAAOC,GAAMF,EAC5B,OAAOA,EAET,OAAO,EA7CQG,GAEVZ,GAEHD,EAAeC,EAAM,SA4CzB,OACE,sBAAKa,GAAG,OAAR,UACE,qBAAKA,GAAG,eAAR,SAAwBf,IACxB,sBAAKV,UAAU,MAAf,UACE,cAAC,EAAD,CAAKI,IAAK,EAAGC,IAAK,EAAGH,aAAcM,EAAML,WAAYA,IACrD,cAAC,EAAD,CAAKC,IAAK,EAAGC,IAAK,EAAGH,aAAcM,EAAML,WAAYA,IACrD,cAAC,EAAD,CAAKC,IAAK,EAAGC,IAAK,EAAGH,aAAcM,EAAML,WAAYA,OAGvD,sBAAKH,UAAU,MAAf,UACE,cAAC,EAAD,CAAKI,IAAK,EAAGC,IAAK,EAAGH,aAAcM,EAAML,WAAYA,IACrD,cAAC,EAAD,CAAKC,IAAK,EAAGC,IAAK,EAAGH,aAAcM,EAAML,WAAYA,IACrD,cAAC,EAAD,CAAKC,IAAK,EAAGC,IAAK,EAAGH,aAAcM,EAAML,WAAYA,OAGvD,sBAAKH,UAAU,MAAf,UACE,cAAC,EAAD,CAAKI,IAAK,EAAGC,IAAK,EAAGH,aAAcM,EAAML,WAAYA,IACrD,cAAC,EAAD,CAAKC,IAAK,EAAGC,IAAK,EAAGH,aAAcM,EAAML,WAAYA,IACrD,cAAC,EAAD,CAAKC,IAAK,EAAGC,IAAK,EAAGH,aAAcM,EAAML,WAAYA,WCtE9CuB,MARf,WACE,OACE,qBAAK1B,UAAU,MAAf,SACE,cAAC,EAAD,OCDN2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6857abd0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './style.css';\n\nfunction Box(props) {\n  const [text, setText] = useState('');\n\n  function toggleText() {\n    if (text === '') {\n      setText(props.currentState);\n      props.changeTurn(props.row, props.col);\n    }\n  }\n\n  return (\n    <div className='box' onClick={toggleText}>\n      {text}\n    </div>\n  );\n}\n\nexport default Box;\n","import React, { useState } from 'react';\nimport './style.css';\nimport Box from '../Box';\n\nconst board = [[], [], []];\n\nfunction Game() {\n  const [turn, setTurn] = useState('X');\n  const [winningText, setWinningText] = useState('');\n\n  function changeTurn(row, col) {\n    board[row][col] = turn;\n\n    setTurn((turn) => (turn === 'X' ? 'O' : 'X'));\n\n    const winner = checkForWin();\n\n    if (!winner) {\n    } else {\n      setWinningText(winner + ` won!`);\n    }\n  }\n\n  function checkForWin() {\n    // row test\n    for (let i = 0; i < board.length; i++) {\n      const row = board[i];\n      if (row[0] === row[1] && row[1] === row[2] && row[0]) {\n        return row[0];\n      }\n    }\n\n    // column test\n    for (let i = 0; i < board.length; i++) {\n      const el1 = board[0][i];\n      const el2 = board[1][i];\n      const el3 = board[2][i];\n\n      if (el1 === el2 && el2 == el3 && el1) {\n        return el1;\n      }\n    }\n\n    // diagonal test\n\n    const d1 = board[0][0];\n    const d2 = board[1][1];\n    const d3 = board[2][2];\n\n    if (d1 === d2 && d2 === d3 && d1) {\n      return d1;\n    }\n\n    const p1 = board[0][2];\n    const p2 = board[1][1];\n    const p3 = board[2][0];\n\n    if (p1 === p2 && p2 === p3 && p1) {\n      return p1;\n    }\n    return false;\n  }\n\n  return (\n    <div id='game'>\n      <div id='winning-text'>{winningText}</div>\n      <div className='row'>\n        <Box row={0} col={0} currentState={turn} changeTurn={changeTurn} />\n        <Box row={0} col={1} currentState={turn} changeTurn={changeTurn} />\n        <Box row={0} col={2} currentState={turn} changeTurn={changeTurn} />\n      </div>\n\n      <div className='row'>\n        <Box row={1} col={0} currentState={turn} changeTurn={changeTurn} />\n        <Box row={1} col={1} currentState={turn} changeTurn={changeTurn} />\n        <Box row={1} col={2} currentState={turn} changeTurn={changeTurn} />\n      </div>\n\n      <div className='row'>\n        <Box row={2} col={0} currentState={turn} changeTurn={changeTurn} />\n        <Box row={2} col={1} currentState={turn} changeTurn={changeTurn} />\n        <Box row={2} col={2} currentState={turn} changeTurn={changeTurn} />\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './components/Game/index';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}